面向过程： 核心为过程2字，流水化
优点：复杂问题流程化
缺点：可扩展性低   因为：面向过程对一个问题分了几个步骤，第一步骤的的结果往往在第二步骤中有依赖。 如果此时扩展需求，第一步需要修改，那么此时
往往不确定后边的步骤是否需要修改，必须要检查代码判断是否需要修改。 这样导致扩展性下降
使用场景： 当然是不需要太多扩展的地方，比较固定
例如：自动部署脚本 下载安装等，都是固定的套路。


面向对象：
优点：可扩展性强
缺点：编程复杂
场景: 网站 游戏  企业内部引用



类和对象的关系：
类：就是一系列特征

在现实世界中： 有每个人的单独对象 再有人类这个类
程序中：必须先定义类，在有对象

定义类，必须先找到相同每个对象相同的特征和功能
这里学到一个方法： 首先写出每个对象的特征和功能， 然后筛选出相似的地方来定义类


